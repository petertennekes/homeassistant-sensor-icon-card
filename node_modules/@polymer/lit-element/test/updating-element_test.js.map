{"version":3,"file":"updating-element_test.js","sourceRoot":"","sources":["../src/test/updating-element_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;AAEH,OAAO,EAAC,eAAe,EAAC,MAAM,4BAA4B,CAAC;AAE3D,OAAO,EACL,mBAAmB,GAEpB,MAAM,mBAAmB,CAAC;AAE3B,8BAA8B;AAE9B,KAAK,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;IACjC,IAAI,SAAsB,CAAC;IAE3B,KAAK,CAAC,GAAG,EAAE;QACT,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,GAAG,EAAE;QACZ,IAAI,SAAS,IAAI,SAAS,CAAC,UAAU,EAAE;YACrC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SAC7C;IACH,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,CAAE,SAAQ,eAAe;YAC7B,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAE9C,SAAS;gBACP,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,CAAC;YAED,MAAM,CAAC,iBAA4C;gBACjD,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YAClC,CAAC;SACF;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {UpdatingElement} from '../lib/updating-element.js';\n\nimport {\n  generateElementName,\n  // stripExpressionDelimeters\n} from './test-helpers.js';\n\n// const assert = chai.assert;\n\nsuite.only('UpdatingElement', () => {\n  let container: HTMLElement;\n\n  setup(() => {\n    container = document.createElement('div');\n    document.body.appendChild(container);\n  });\n\n  teardown(() => {\n    if (container && container.parentNode) {\n      container.parentNode.removeChild(container);\n    }\n  });\n\n  test('can override _schedule()', async () => {\n    class A extends UpdatingElement {\n      static get properties() { return {foo : {}}; }\n\n      _schedule() {\n        return new Promise((r) => setTimeout(r));\n      }\n\n      update(changedProperties: Map<PropertyKey, unknown>) {\n        super.update(changedProperties);\n      }\n    }\n    customElements.define(generateElementName(), A);\n  });\n\n});\n"]}